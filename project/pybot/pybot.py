#!/usr/bin/env python3

import telebot
import random

from random import choice

from telebot import types

token ="6696862257:AAHYLZIyWbaHREKGr5eLpFY-gRG1GAQLz-A"

bot = telebot.TeleBot(token)

RANDOM_TASKS = ["–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—É—Ç—å –≤ –Ω–µ—Ç–æ–ª–æ–≥–∏—é","–ù–∞–ø–∏—Å–∞—Ç—å –ì–≤–∏–¥–æ –ø–∏—Å—å–º–æ","–ø–æ–º—ã—Ç—å –º–∞—à–∏–Ω—É" ]

HELP ="""
/help - –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å! —Å–ø—Ä–∞–≤–∫—É –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ
/add - –¥–æ–±–∞–≤–∏—Ç—å! –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫(–Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∑–∞–ø—Ä–∞–≤—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
/show - –Ω–∞–ø–µ—á–∞—Ç–∞—Ç—å! –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
/print - –≤—ã–≤–µ—Å—Ç–∏! –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –¥–∞—Ç–∞–º
/random - –¥–æ–±–∞–≤–ª—è—Ç—å! —Å–ª—É—á–∞–π–Ω—É—é –∑–∞–¥–∞—á—É –Ω–∞ –¥–∞—Ç—É –°–µ–≥–æ–¥–Ω—è
"""

HELP_BOT="""

pip3 install --user pytelegrambotapi




"""



tasks = {}


#—Ñ—É–Ω–∫—Ü–∏—è
def add_todo(date,task):
    if date in tasks:
         tasks[date].append(task)
    else:
         tasks[date] = []
         tasks[date].append(task)



@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è —Ç–≤–æ–µ–π —Å—Ç–∞—Ç—å–∏ –¥–ª—è habr.com".format(message.from_user), reply_markup=markup)

@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ —á–∏—Ç–∞–µ—à—å —Å—Ç–∞—Ç—å—é!)")
    elif(message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
        btn2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)

    elif(message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
        bot.send_message(message.chat.id, "–£ –º–µ–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏..")

    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å —á–∏—Ç–∞—Ç–µ–ª—è–º–∏")

    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        markup.add(button1, button2)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, text="–ù–∞ —Ç–∞–∫—É—é –∫–æ–º–º–∞–Ω–¥—É —è –Ω–µ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–ª..")







@bot.message_handler(commands=["help"])
def help(message):
    bot.send_message(message.chat.id, HELP)


@bot.message_handler(commands=["add"])
def add(message):
    try:
        command = message.text.split(maxsplit=2)
        data = command[1] #–¥–∞—Ç–∞
        task = command[2] #–∑–∞–¥–∞—á–∞

        cat = task.split('@') #category
        text = cat[0] #text
        cat1 = cat[1] #text

        try:
            bot.send_message(message.chat.id,text)

            add_todo(data, task)
            text = "–ó–∞–¥–∞—á–∞ " + text +" –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: " + "@" + cat1 + " –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–∞—Ç—É " + data
            bot.send_message(message.chat.id, text)

        except IndexError:
            bot.send_message(message.chat.id," error –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è")

    except IndexError:
       print(message.text + " error ")
       bot.send_message(message.chat.id,message.text + " ? –∞ –¥–∞–ª—å—à–µ —á—Ç–æ ?")

@bot.message_handler(commands=["random"])
def random_add(message):

    date = "—Å–µ–≥–æ–¥–Ω—è"
    task = random.choice(RANDOM_TASKS)
    add_todo(date, task)
    text = "–ó–∞–¥–∞—á–∞ " + task + " –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –¥–∞—Ç—É " + date
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=["show"])
def show(message): #message.text = /print <date>
    try:

        command = message.text.split(maxsplit=1)
        date = command[1].lower()
        text = ""

        if date in tasks:
            text = "–î–∞—Ç–∞: " + date.upper() + "\n"
            bot.send_message(message.chat.id, text)
            for task in tasks[date]:
                task1 = "[] " + task + "\n"
                bot.send_message(message.chat.id, task1)
        else:
            text = "–ó–∞–¥–∞—á –Ω–∞ —ç—Ç—É –¥–∞—Ç—É –Ω–µ—Ç"
            bot.send_message(message.chat.id, text)

    except IndexError:
       print(message.text + " error ")
       bot.send_message(message.chat.id,message.text + " –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É")


@bot.message_handler(commands=["print"])
def show(message):
    try:
        command = message.text.split()
        date1 = command[1]
        command = message.text.split(maxsplit=1)
        date1 = command[1].replace(' ','').split(",")

        for key in date1:
            #print(key)
            for task in tasks[key]:
                cat1 =  task.split('@')
                text1 = "–Ω–∞ –¥–∞—Ç—É: " + key
                bot.send_message(message.chat.id, text1)
                bot.send_message(message.chat.id, str('@') + str(cat1[1]) + " " + str(cat1[0]))

    except IndexError:
       print(message.text + " error ")
       bot.send_message(message.chat.id,message.text + " –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–∞—Ç —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é")


# –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä–∞–º —Ç–µ–ª–µ–≥—Ä–∞–º
bot.polling(non_stop=True)
